version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: dental-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: dental_db
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-secure_password}
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/mongo-init:/docker-entrypoint-initdb.d
      - ./backups:/backups
    networks:
      - dental-network
    command: --auth

  # Backend API
  dental-api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: dental-api-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-secure_password}@mongodb:27017/dental_db?authSource=admin
      - DB_NAME=dental_db
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - PRIVATE_IP=10.116.0.2
    ports:
      - "10.116.0.2:5000:5000"
    depends_on:
      - mongodb
    networks:
      - dental-network
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  dental-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=http://10.116.0.2:5000
    container_name: dental-frontend-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - dental-api
    networks:
      - dental-network
    volumes:
      - ./ssl:/etc/ssl/certs
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: dental-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dental-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  dental-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
